"use strict";(self.webpackChunkmedia_processor_docs=self.webpackChunkmedia_processor_docs||[]).push([[400],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>u});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},d=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=l(t),u=o,f=m["".concat(c,".").concat(u)]||m[u]||p[u]||a;return t?n.createElement(f,s(s({ref:r},d),{},{components:t})):n.createElement(f,s({ref:r},d))}));function u(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5562:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const a={id:"MediaProcessorConnector",title:"Class: MediaProcessorConnector",sidebar_label:"MediaProcessorConnector",sidebar_position:0,custom_edit_url:null},s=void 0,i={unversionedId:"api/classes/MediaProcessorConnector",id:"api/classes/MediaProcessorConnector",title:"Class: MediaProcessorConnector",description:"Helper class implementing the media Media Processor Connector Interface.",source:"@site/docs/api/classes/MediaProcessorConnector.md",sourceDirName:"api/classes",slug:"/api/classes/MediaProcessorConnector",permalink:"/media-processor-docs/docs/api/classes/MediaProcessorConnector",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"MediaProcessorConnector",title:"Class: MediaProcessorConnector",sidebar_label:"MediaProcessorConnector",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"MediaProcessor",permalink:"/media-processor-docs/docs/api/classes/MediaProcessor"},next:{title:"MediaProcessorConnectorInterface",permalink:"/media-processor-docs/docs/api/interfaces/MediaProcessorConnectorInterface"}},c={},l=[{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4}],d={toc:l};function p(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Helper class implementing the media Media Processor Connector Interface.\nThis class should always be created on the application main thread and it should be used by Vonage SDKs.\nAn example can be found ",(0,o.kt)("a",{parentName:"p",href:"/media-processor-docs/docs/intro#using-the-transformer-on-main-process"},"here"),"."),(0,o.kt)("h2",{id:"implements"},"Implements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/media-processor-docs/docs/api/interfaces/MediaProcessorConnectorInterface"},(0,o.kt)("inlineCode",{parentName:"a"},"MediaProcessorConnectorInterface")))),(0,o.kt)("h2",{id:"constructors"},"Constructors"),(0,o.kt)("h3",{id:"constructor"},"constructor"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("strong",{parentName:"p"},"new MediaProcessorConnector"),"(",(0,o.kt)("inlineCode",{parentName:"p"},"vonageMediaProcessor"),")"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"When running insertable streams on the main ",(0,o.kt)("inlineCode",{parentName:"li"},"MediaProcessorInterface")," should be instance of ",(0,o.kt)("inlineCode",{parentName:"li"},"MediaProcessor")," class."),(0,o.kt)("li",{parentName:"ul"},"When running insertable streams on WebWorker ",(0,o.kt)("inlineCode",{parentName:"li"},"MediaProcessorInterface")," should be instance of bridge calss created by the user. Example can be found ",(0,o.kt)("a",{parentName:"li",href:"/media-processor-docs/docs/intro#using-the-transformer-on-webworker"},"here"))),(0,o.kt)("h4",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"vonageMediaProcessor")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"/media-processor-docs/docs/api/interfaces/MediaProcessorInterface"},(0,o.kt)("inlineCode",{parentName:"a"},"MediaProcessorInterface"))),(0,o.kt)("td",{parentName:"tr",align:"left"},"MediaProcessorInterface.")))))}p.isMDXComponent=!0}}]);